name: Build Executables

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  release:
    types: [created]
  workflow_dispatch:  # Allows manual triggering

jobs:
  build:
    name: Build on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
        include:
          - os: ubuntu-latest
            output_name: crust-file-status-checker-linux
          - os: windows-latest
            output_name: crust-file-status-checker-win.exe

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'

    - name: Install dependencies
      run: npm ci

    - name: Build executables
      run: npm run build

    # For Linux, we need to handle both x64 and ARM64 binaries
    - name: Handle Linux binaries
      if: matrix.os == 'ubuntu-latest'
      run: |
        mkdir -p dist
        # List all files to see what pkg created
        ls -la
        # The binary name is defined in package.json's bin field as "crust-file-status-checker"
        if [ -f "crust-file-status-checker-linux-x64" ]; then
          cp crust-file-status-checker-linux-x64 dist/
        elif [ -f "crust-file-status-checker-node18-linux-x64" ]; then
          cp crust-file-status-checker-node18-linux-x64 dist/crust-file-status-checker-linux-x64
        fi
        
        if [ -f "crust-file-status-checker-linux-arm64" ]; then
          cp crust-file-status-checker-linux-arm64 dist/
        elif [ -f "crust-file-status-checker-node18-linux-arm64" ]; then
          cp crust-file-status-checker-node18-linux-arm64 dist/crust-file-status-checker-linux-arm64
        fi
      shell: bash

    # For Windows, we have just the x64 binary
    - name: Handle Windows binary
      if: matrix.os == 'windows-latest'
      run: |
        mkdir -p dist
        dir
        if exist "crust-file-status-checker-win-x64.exe" (
          copy crust-file-status-checker-win-x64.exe dist\
        ) else if exist "crust-file-status-checker-node18-win-x64.exe" (
          copy crust-file-status-checker-node18-win-x64.exe dist\crust-file-status-checker-win-x64.exe
        )
      shell: cmd

    # Upload artifacts for each build
    - name: Upload Linux artifacts
      if: matrix.os == 'ubuntu-latest'
      uses: actions/upload-artifact@v4
      with:
        name: crust-file-status-checker-linux
        path: dist/

  # Optional job to create a release with the binaries
  release:
    name: Attach binaries to release
    runs-on: ubuntu-latest
    needs: build
    if: github.event_name == 'release'
    
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Upload binaries to release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            artifacts/crust-file-status-checker-linux/**/*
            artifacts/crust-file-status-checker-windows/**/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
