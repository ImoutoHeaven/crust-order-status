name: Build Executables

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  release:
    types: [created]
  workflow_dispatch:  # Allows manual triggering

jobs:
  build:
    name: Build with Docker
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Build in Docker
      run: |
        # Create a Dockerfile for the build
        cat > Dockerfile << 'EOF'
        FROM node:18-buster
        WORKDIR /app
        COPY . .
        RUN npm ci
        RUN npx pkg . --targets node18-linux-x64,node18-linux-arm64,node18-win-x64 --output dist/crust-file-status-checker
        CMD ["ls", "-la", "dist"]
        EOF
        
        # Build and run the Docker image
        docker build -t crust-build .
        docker create --name extract crust-build
        docker cp extract:/app/dist ./dist
        docker rm -f extract
        
        # List the generated files
        ls -la dist/

    - name: Upload Linux x64 artifact
      uses: actions/upload-artifact@v4
      with:
        name: crust-file-status-checker-linux-x64
        path: dist/crust-file-status-checker-linux-x64

    - name: Upload Linux ARM64 artifact
      uses: actions/upload-artifact@v4
      with:
        name: crust-file-status-checker-linux-arm64
        path: dist/crust-file-status-checker-linux-arm64

    - name: Upload Windows artifact
      uses: actions/upload-artifact@v4
      with:
        name: crust-file-status-checker-win-x64
        path: dist/crust-file-status-checker-win-x64.exe

  # Optional job to create a release with the binaries
  release:
    name: Attach binaries to release
    runs-on: ubuntu-latest
    needs: build
    if: github.event_name == 'release'
    permissions:
      contents: write
    
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: List downloaded artifacts
        run: ls -R artifacts/

      - name: Upload binaries to release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            artifacts/crust-file-status-checker-linux-x64/crust-file-status-checker-linux-x64
            artifacts/crust-file-status-checker-linux-arm64/crust-file-status-checker-linux-arm64
            artifacts/crust-file-status-checker-win-x64/crust-file-status-checker-win-x64.exe
          tag_name: ${{ github.ref_name }}
        env:
          GITHUB_TOKEN: ${{ secrets.RELEASE_TOKEN }}
