name: Build Binaries

on:
  push:
    tags:
      - 'v*'  # Triggers on version tags like v1.0.0
  release:
    types: [published]  # Triggers when a release is published
  workflow_dispatch:  # Allows manual triggering from the UI

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: 
          - ubuntu-latest
          - windows-latest
          - macos-latest
        arch:
          - x64
          - arm64

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '18'  # Adjust based on your project's requirements

      - name: Install dependencies
        run: npm install

      - name: Build binaries
        run: npm run build -- --target ${{
            matrix.os == 'windows-latest' && matrix.arch == 'x64' && 'win32-x64'
            || matrix.os == 'windows-latest' && matrix.arch == 'arm64' && 'win32-arm64'
            || matrix.os == 'ubuntu-latest' && matrix.arch == 'x64' && 'linux-x64'
            || matrix.os == 'ubuntu-latest' && matrix.arch == 'arm64' && 'linux-arm64'
            || matrix.os == 'macos-latest' && matrix.arch == 'x64' && 'macos-x64'
            || matrix.os == 'macos-latest' && matrix.arch == 'arm64' && 'macos-arm64'
          }}

      - name: Upload Release Assets
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ./binaries/${{ runner.os }}-${{ matrix.arch }}.exe  # Adjust path as necessary
          asset_name: crust-order-status-${{ runner.os }}-${{ matrix.arch }}.exe  # Adjust naming as necessary
          asset_content_type: application/octet-stream
